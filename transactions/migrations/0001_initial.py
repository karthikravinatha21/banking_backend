# Generated by Django 4.2.7 on 2025-07-30 18:15

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("accounts", "0001_initial"),
        ("core", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="TransactionCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                ("icon", models.CharField(blank=True, max_length=50)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Transaction Category",
                "verbose_name_plural": "Transaction Categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="TransactionLimit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("deposit", "Deposit"),
                            ("withdrawal", "Withdrawal"),
                            ("transfer", "Transfer"),
                            ("payment", "Payment"),
                            ("fee", "Fee"),
                            ("interest", "Interest"),
                            ("refund", "Refund"),
                            ("adjustment", "Adjustment"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "limit_type",
                    models.CharField(
                        choices=[
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("monthly", "Monthly"),
                            ("per_transaction", "Per Transaction"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "applies_to",
                    models.CharField(
                        choices=[
                            ("account", "Account"),
                            ("user", "User"),
                            ("global", "Global"),
                        ],
                        max_length=20,
                    ),
                ),
                ("limit_amount", models.DecimalField(decimal_places=2, max_digits=15)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "current_period_usage",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=15
                    ),
                ),
                ("period_start", models.DateTimeField(auto_now_add=True)),
                (
                    "account",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transaction_limits",
                        to="accounts.account",
                    ),
                ),
                (
                    "currency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="core.currency"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transaction_limits",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Transaction Limit",
                "verbose_name_plural": "Transaction Limits",
            },
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "transaction_id",
                    models.CharField(editable=False, max_length=50, unique=True),
                ),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("deposit", "Deposit"),
                            ("withdrawal", "Withdrawal"),
                            ("transfer", "Transfer"),
                            ("payment", "Payment"),
                            ("fee", "Fee"),
                            ("interest", "Interest"),
                            ("refund", "Refund"),
                            ("adjustment", "Adjustment"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                (
                    "exchange_rate",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=18, null=True
                    ),
                ),
                (
                    "balance_before",
                    models.DecimalField(decimal_places=2, max_digits=15),
                ),
                ("balance_after", models.DecimalField(decimal_places=2, max_digits=15)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                            ("reversed", "Reversed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "method",
                    models.CharField(
                        choices=[
                            ("cash", "Cash"),
                            ("check", "Check"),
                            ("wire", "Wire Transfer"),
                            ("ach", "ACH Transfer"),
                            ("card", "Card Payment"),
                            ("online", "Online Transfer"),
                            ("mobile", "Mobile Transfer"),
                            ("atm", "ATM"),
                        ],
                        default="online",
                        max_length=20,
                    ),
                ),
                ("description", models.TextField()),
                ("reference_number", models.CharField(blank=True, max_length=100)),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                ("external_reference", models.CharField(blank=True, max_length=200)),
                (
                    "fee_amount",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("notes", models.TextField(blank=True)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to="accounts.account",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="transactions.transactioncategory",
                    ),
                ),
                (
                    "currency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="core.currency"
                    ),
                ),
                (
                    "processed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="processed_transactions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Transaction",
                "verbose_name_plural": "Transactions",
                "db_table": "transactions_transaction",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ScheduledTransaction",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("deposit", "Deposit"),
                            ("withdrawal", "Withdrawal"),
                            ("transfer", "Transfer"),
                            ("payment", "Payment"),
                            ("fee", "Fee"),
                            ("interest", "Interest"),
                            ("refund", "Refund"),
                            ("adjustment", "Adjustment"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                ("description", models.TextField()),
                (
                    "frequency",
                    models.CharField(
                        choices=[
                            ("once", "One Time"),
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("biweekly", "Bi-weekly"),
                            ("monthly", "Monthly"),
                            ("quarterly", "Quarterly"),
                            ("annually", "Annually"),
                        ],
                        max_length=20,
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("next_execution", models.DateTimeField()),
                ("last_execution", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("paused", "Paused"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("execution_count", models.PositiveIntegerField(default=0)),
                ("max_executions", models.PositiveIntegerField(blank=True, null=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scheduled_transactions",
                        to="accounts.account",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="transactions.transactioncategory",
                    ),
                ),
                (
                    "currency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="core.currency"
                    ),
                ),
                (
                    "destination_account",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="incoming_scheduled_transactions",
                        to="accounts.account",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="scheduled_transactions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Scheduled Transaction",
                "verbose_name_plural": "Scheduled Transactions",
            },
        ),
        migrations.CreateModel(
            name="Transfer",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "transfer_id",
                    models.CharField(editable=False, max_length=50, unique=True),
                ),
                ("to_external_account", models.CharField(blank=True, max_length=50)),
                ("to_bank_code", models.CharField(blank=True, max_length=20)),
                (
                    "transfer_type",
                    models.CharField(
                        choices=[
                            ("internal", "Internal Transfer"),
                            ("external", "External Transfer"),
                            ("wire", "Wire Transfer"),
                            ("ach", "ACH Transfer"),
                        ],
                        default="internal",
                        max_length=20,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                (
                    "exchange_rate",
                    models.DecimalField(
                        blank=True, decimal_places=8, max_digits=18, null=True
                    ),
                ),
                (
                    "converted_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("description", models.TextField()),
                ("reference_number", models.CharField(blank=True, max_length=100)),
                ("external_reference", models.CharField(blank=True, max_length=200)),
                (
                    "transfer_fee",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                ("scheduled_at", models.DateTimeField(blank=True, null=True)),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("notes", models.TextField(blank=True)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_transfers",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "credit_transaction",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="credit_transfer",
                        to="transactions.transaction",
                    ),
                ),
                (
                    "currency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="core.currency"
                    ),
                ),
                (
                    "debit_transaction",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="debit_transfer",
                        to="transactions.transaction",
                    ),
                ),
                (
                    "from_account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="outgoing_transfers",
                        to="accounts.account",
                    ),
                ),
                (
                    "initiated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="initiated_transfers",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "to_account",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="incoming_transfers",
                        to="accounts.account",
                    ),
                ),
            ],
            options={
                "verbose_name": "Transfer",
                "verbose_name_plural": "Transfers",
                "db_table": "transactions_transfer",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["transfer_id"], name="transaction_transfe_9c4028_idx"
                    ),
                    models.Index(
                        fields=["from_account", "status"],
                        name="transaction_from_ac_7dfd9e_idx",
                    ),
                    models.Index(
                        fields=["to_account", "status"],
                        name="transaction_to_acco_9e753a_idx",
                    ),
                    models.Index(
                        fields=["initiated_by", "created_at"],
                        name="transaction_initiat_cd232b_idx",
                    ),
                    models.Index(
                        fields=["status", "scheduled_at"],
                        name="transaction_status_51a75e_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["transaction_id"], name="transaction_transac_fee96f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["account", "status"], name="transaction_account_c7d002_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["user", "created_at"], name="transaction_user_id_f5864b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["transaction_type", "status"],
                name="transaction_transac_ed11cf_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="transaction",
            index=models.Index(
                fields=["created_at"], name="transaction_created_67ce7b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="scheduledtransaction",
            index=models.Index(
                fields=["next_execution", "status"],
                name="transaction_next_ex_0ee876_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="scheduledtransaction",
            index=models.Index(
                fields=["account", "status"], name="transaction_account_83c2cb_idx"
            ),
        ),
    ]
